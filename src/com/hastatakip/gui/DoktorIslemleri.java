/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hastatakip.gui;

import com.hastatakip.dao.*;
import com.hastatakip.entity.*;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import java.util.List;


/**
 *
 * @author serkancam
 */
public class DoktorIslemleri extends javax.swing.JFrame {
   

    /**
     * Creates new form DoktorIslemleri
     */
    public GirisSayfasi ataPencere;
    public DoktorIslemleri() {
        initComponents();
    }
    int secilenIlacId;
    
    void DoktorUzmanlikCBDoldur()
    {
        List<DoktorUzmanlik> uzmanliklar =null;
       DoktorUzmanlikDao islem=new DoktorUzmanlikDao();
       uzmanliklar=islem.TumListeyiGetir();
      
        for (DoktorUzmanlik uzmanlik : uzmanliklar) 
        {
            cbDoktorUzmanlik.addItem(uzmanlik);
            
            
        }
    }
            
    void DoktorTablosuDoldur()
    {
        
       DefaultTableModel model= (DefaultTableModel) tblDoktor.getModel(); 
       int rowCount = model.getRowCount();
       //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--)
        {
             model.removeRow(i);
        }
       List<Doktor> doktorlar =null;
       DoktorDao islem=new DoktorDao();
       doktorlar=islem.TumListeyiGetir();
       
        for (Doktor doktor : doktorlar) {
             model.addRow(new Object[]{doktor.getDoktorTC(),doktor.getDoktorAdi(),doktor.getDoktorSoyadi(),doktor.getDoktorDogumTarihi(),doktor.getDoktorUzmanlik()});
            
            
        }
       
                
    }
    
    void IlacTablosuDoldur()
    {
       DefaultTableModel model= (DefaultTableModel) tblIlaclar.getModel(); 
       int rowCount = model.getRowCount();
       //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--)
        {
             model.removeRow(i);
        }
       List<Ilac> ilaclar =null;
       IlacDao islem=new IlacDao();
       ilaclar=islem.TumListeyiGetir();
       
        for (Ilac ilac : ilaclar) {
             model.addRow(new Object[]{ilac.toString()});
            
            
        }
        
    }
    
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDoktor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoktor = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDoktorTC = new javax.swing.JTextField();
        txtDoktorAdi = new javax.swing.JTextField();
        txtDoktorSoyadi = new javax.swing.JTextField();
        cbDoktorUzmanlik = new javax.swing.JComboBox<>();
        dtpDoktorDogumTarihi = new org.jdesktop.swingx.JXDatePicker();
        btnDoktorEkle = new javax.swing.JButton();
        btnDoktorSil = new javax.swing.JButton();
        btnDoktorGuncelle = new javax.swing.JButton();
        lblBilgi = new javax.swing.JLabel();
        pnlIlac = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblIlaclar = new javax.swing.JTable();
        txtIlacAdi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnIlacEkle = new javax.swing.JButton();
        btnIlacSil = new javax.swing.JButton();
        btnIlacGuncelle = new javax.swing.JButton();
        lblIlacBilgi = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        pnlDoktor.setBackground(new java.awt.Color(205, 224, 223));

        tblDoktor.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        tblDoktor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doktor TC", "Doktor Adı", "Doktor Soyadı", "Doğum Tarihi", "Doktor Uzmanlğı"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblDoktor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoktorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDoktor);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Doktor TC:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Doktor Adı:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Doktor Soyadı:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Doktor Uzmanlık Alanı:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Doktor Doğum Tarihi:");

        btnDoktorEkle.setText("Ekle");
        btnDoktorEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoktorEkleActionPerformed(evt);
            }
        });

        btnDoktorSil.setText("Sil");
        btnDoktorSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoktorSilActionPerformed(evt);
            }
        });

        btnDoktorGuncelle.setText("Güncelle");
        btnDoktorGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoktorGuncelleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDoktorLayout = new javax.swing.GroupLayout(pnlDoktor);
        pnlDoktor.setLayout(pnlDoktorLayout);
        pnlDoktorLayout.setHorizontalGroup(
            pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
            .addGroup(pnlDoktorLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(lblBilgi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDoktorLayout.createSequentialGroup()
                    .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlDoktorLayout.createSequentialGroup()
                            .addGap(34, 34, 34)
                            .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(30, 30, 30)
                            .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbDoktorUzmanlik, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDoktorTC)
                                .addComponent(txtDoktorAdi)
                                .addComponent(txtDoktorSoyadi)
                                .addComponent(dtpDoktorDogumTarihi, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDoktorLayout.createSequentialGroup()
                            .addGap(46, 46, 46)
                            .addComponent(btnDoktorEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                            .addComponent(btnDoktorSil, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(58, 58, 58)
                            .addComponent(btnDoktorGuncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        pnlDoktorLayout.setVerticalGroup(
            pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDoktorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblBilgi, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDoktorLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDoktorTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDoktorAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDoktorSoyadi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbDoktorUzmanlik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(17, 17, 17)
                    .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dtpDoktorDogumTarihi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(pnlDoktorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDoktorEkle)
                        .addComponent(btnDoktorSil)
                        .addComponent(btnDoktorGuncelle))
                    .addGap(213, 213, 213)))
        );

        pnlIlac.setBackground(new java.awt.Color(192, 228, 228));

        tblIlaclar.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        tblIlaclar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "İlaç"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblIlaclar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblIlaclarMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblIlaclar);

        jLabel6.setText("İlaç Adı");

        btnIlacEkle.setText("Ekle");
        btnIlacEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIlacEkleActionPerformed(evt);
            }
        });

        btnIlacSil.setText("Sil");
        btnIlacSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIlacSilActionPerformed(evt);
            }
        });

        btnIlacGuncelle.setText("Güncelle");
        btnIlacGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIlacGuncelleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlIlacLayout = new javax.swing.GroupLayout(pnlIlac);
        pnlIlac.setLayout(pnlIlacLayout);
        pnlIlacLayout.setHorizontalGroup(
            pnlIlacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(pnlIlacLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlIlacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlIlacLayout.createSequentialGroup()
                        .addComponent(btnIlacEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnIlacSil, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnIlacGuncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtIlacAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIlacBilgi, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        pnlIlacLayout.setVerticalGroup(
            pnlIlacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlIlacLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(pnlIlacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIlacAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(pnlIlacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIlacGuncelle)
                    .addComponent(btnIlacSil)
                    .addComponent(btnIlacEkle))
                .addGap(18, 18, 18)
                .addComponent(lblIlacBilgi, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlDoktor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlIlac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlDoktor, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(pnlIlac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDoktorEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoktorEkleActionPerformed
        // TODO add your handling code here:
        
        
         lblBilgi.setText("");
        DefaultTableModel model= (DefaultTableModel) tblDoktor.getModel();
       Doktor doktor =new Doktor();
       doktor.setDoktorTC(txtDoktorTC.getText());
       doktor.setDoktorAdi(txtDoktorAdi.getText());
       doktor.setDoktorSoyadi(txtDoktorSoyadi.getText());
       doktor.setDoktorDogumTarihi(dtpDoktorDogumTarihi.getDate());
       doktor.setDoktorUzmanlik(Byte.parseByte(((DoktorUzmanlik)cbDoktorUzmanlik.getSelectedItem()).toString().split("-")[0].trim()));
       DoktorDao islem=new DoktorDao();
       if(islem.Ekle(doktor)>0)
           lblBilgi.setText("Ekleme başarılı");
       else
           lblBilgi.setText("Ekleme işlemi başarısız");
       
       DoktorTablosuDoldur();
    }//GEN-LAST:event_btnDoktorEkleActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        DoktorTablosuDoldur();
        IlacTablosuDoldur();
        DoktorUzmanlikCBDoldur();
        
        
        
              
           
          
        
                
        
    
    }//GEN-LAST:event_formWindowOpened

    private void btnDoktorSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoktorSilActionPerformed
        // TODO add your handling code here:
        lblBilgi.setText("");
        DefaultTableModel model= (DefaultTableModel) tblDoktor.getModel();
       Doktor doktor =new Doktor();
       doktor.setDoktorTC(txtDoktorTC.getText());
       doktor.setDoktorAdi(txtDoktorAdi.getText());
       doktor.setDoktorSoyadi(txtDoktorSoyadi.getText());
       doktor.setDoktorDogumTarihi(dtpDoktorDogumTarihi.getDate());
       doktor.setDoktorUzmanlik(Byte.parseByte(((DoktorUzmanlik)cbDoktorUzmanlik.getSelectedItem()).toString().split("-")[0].trim()));
       DoktorDao islem=new DoktorDao();
       if(islem.Sil(doktor.getDoktorTC())>0)
           lblBilgi.setText("Silme başarılı");
       else
           lblBilgi.setText("Silme işlemi başarısız");
       
       DoktorTablosuDoldur();
    }//GEN-LAST:event_btnDoktorSilActionPerformed

    private void btnDoktorGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoktorGuncelleActionPerformed
        // TODO add your handling code here:
       lblBilgi.setText("");
       DefaultTableModel model= (DefaultTableModel) tblDoktor.getModel();
       Doktor doktor =new Doktor();
       doktor.setDoktorTC(txtDoktorTC.getText());
       doktor.setDoktorAdi(txtDoktorAdi.getText());
       doktor.setDoktorSoyadi(txtDoktorSoyadi.getText());
       doktor.setDoktorDogumTarihi(dtpDoktorDogumTarihi.getDate());
       doktor.setDoktorUzmanlik(Byte.parseByte(((DoktorUzmanlik)cbDoktorUzmanlik.getSelectedItem()).toString().split("-")[0].trim()));
       DoktorDao islem=new DoktorDao();
       if(islem.Guncelle(doktor)>0)
           lblBilgi.setText("Güncellem başarılı");
       else
           lblBilgi.setText("Güncelleme işlemi başarısız");
       
       DoktorTablosuDoldur();
    }//GEN-LAST:event_btnDoktorGuncelleActionPerformed

    private void tblDoktorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoktorMouseClicked
        // TODO add your handling code here:
        lblBilgi.setText("");
         DefaultTableModel model= (DefaultTableModel) tblDoktor.getModel();
        if(tblDoktor.getRowCount()==0){
         
            lblBilgi.setText("Tabloda kayıt yok");
            
        }
        else if(tblDoktor.getSelectedRow()==-1){
            lblBilgi.setText("lütfen bir satır seçiniz");
          
        }
        else{
        
         txtDoktorTC.setText(model.getValueAt(tblDoktor.getSelectedRow(), 0).toString());
         txtDoktorAdi.setText(model.getValueAt( tblDoktor.getSelectedRow(), 1).toString());
         txtDoktorSoyadi.setText(model.getValueAt( tblDoktor.getSelectedRow(), 2).toString());
         dtpDoktorDogumTarihi.setDate((Date)model.getValueAt( tblDoktor.getSelectedRow(), 3)); 
        
        }
    }//GEN-LAST:event_tblDoktorMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        ataPencere.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void tblIlaclarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblIlaclarMouseClicked
        // TODO add your handling code here:
        lblIlacBilgi.setText("");
         DefaultTableModel model= (DefaultTableModel) tblIlaclar.getModel();
        if(tblIlaclar.getRowCount()==0)
        {
        lblIlacBilgi.setText("Tabloda kayıt yok");
            
        }
        else if(tblIlaclar.getSelectedRow()==-1)
        {
            lblIlacBilgi.setText("lütfen bir satır seçiniz");
          
        }
        else
        {
        
        txtIlacAdi.setText(model.getValueAt(tblIlaclar.getSelectedRow(), 0).toString().split("-")[1].trim());         
        secilenIlacId=Integer.parseInt(model.getValueAt(tblIlaclar.getSelectedRow(), 0).toString().split("-")[0].trim());
        
        }
        
    }//GEN-LAST:event_tblIlaclarMouseClicked

    private void btnIlacEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIlacEkleActionPerformed
        // TODO add your handling code here:
        lblIlacBilgi.setText("");
       DefaultTableModel model= (DefaultTableModel) tblIlaclar.getModel();
       Ilac ilac =new Ilac();
       ilac.setIlacAdi(txtIlacAdi.getText());
       
       IlacDao islem=new IlacDao();
       if(islem.Ekle(ilac)>0)
           lblIlacBilgi.setText("İlaç ekleme başarılı");
       else
           lblIlacBilgi.setText("İlaç ekleme işlemi başarısız");
       
       IlacTablosuDoldur();
    }//GEN-LAST:event_btnIlacEkleActionPerformed

    private void btnIlacSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIlacSilActionPerformed
        // TODO add your handling code here:
        lblIlacBilgi.setText("");
        DefaultTableModel model= (DefaultTableModel) tblIlaclar.getModel();
       Ilac ilac =new Ilac();
       ilac.setIlacId(secilenIlacId);
       
       IlacDao islem=new IlacDao();
       if(islem.Sil(ilac.getIlacId())>0)
           lblBilgi.setText("İlaç silme başarılı");
       else
           lblBilgi.setText("İlaç  silme işlemi başarısız");
       
       IlacTablosuDoldur();
    }//GEN-LAST:event_btnIlacSilActionPerformed

    private void btnIlacGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIlacGuncelleActionPerformed
        // TODO add your handling code here:
        lblIlacBilgi.setText("");
       DefaultTableModel model= (DefaultTableModel) tblIlaclar.getModel();
       Ilac ilac =new Ilac();
       ilac.setIlacId(secilenIlacId);
       ilac.setIlacAdi(txtIlacAdi.getText());
       
       IlacDao islem=new IlacDao();
       if(islem.Guncelle(ilac)>0)
           lblIlacBilgi.setText("İlaç güncellem başarılı");
       else
           lblIlacBilgi.setText("İlaç Güncelleme işlemi başarısız");
       
       IlacTablosuDoldur();
    }//GEN-LAST:event_btnIlacGuncelleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoktorIslemleri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoktorIslemleri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoktorIslemleri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoktorIslemleri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoktorIslemleri().setVisible(true);
                
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoktorEkle;
    private javax.swing.JButton btnDoktorGuncelle;
    private javax.swing.JButton btnDoktorSil;
    private javax.swing.JButton btnIlacEkle;
    private javax.swing.JButton btnIlacGuncelle;
    private javax.swing.JButton btnIlacSil;
    private javax.swing.JComboBox<DoktorUzmanlik> cbDoktorUzmanlik;
    private org.jdesktop.swingx.JXDatePicker dtpDoktorDogumTarihi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBilgi;
    private javax.swing.JLabel lblIlacBilgi;
    private javax.swing.JPanel pnlDoktor;
    private javax.swing.JPanel pnlIlac;
    private javax.swing.JTable tblDoktor;
    private javax.swing.JTable tblIlaclar;
    private javax.swing.JTextField txtDoktorAdi;
    private javax.swing.JTextField txtDoktorSoyadi;
    private javax.swing.JTextField txtDoktorTC;
    private javax.swing.JTextField txtIlacAdi;
    // End of variables declaration//GEN-END:variables
}
